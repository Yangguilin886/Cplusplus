class Solution {
public:
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        vector<vector<int>> tmp(mat.size()+1,vector<int>(mat[0].size()+1));
        for(int i=1;i<=mat.size();i++)
        {
            for(int j=1;j<=mat[0].size();j++)
            {
                tmp[i][j]=mat[i-1][j-1]+tmp[i-1][j]+tmp[i][j-1]-tmp[i-1][j-1];
            }
        }
        vector<vector<int>> ret(mat.size(),vector<int>(mat[0].size()));
        for(int i=0;i<mat.size();i++)
        {
            for(int j=0;j<mat[0].size();j++)
            {
                int x1=max(0,i-k)+1;
                int y1=max(0,j-k)+1;
                int n=mat[0].size();
                int m=mat.size();
                int x2=min(i+k,m-1)+1;
                int y2=min(j+k,n-1)+1;
                ret[i][j]=tmp[x2][y2]-tmp[x2][y1-1]-tmp[x1-1][y2]+tmp[x1-1][y1-1];
            }
        }
        return ret;
    }
};