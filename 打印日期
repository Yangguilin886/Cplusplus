#include <iostream>
#include <iterator>
using namespace std;
class Data
{
    friend istream& operator>>(istream& in, Data& A);
public:
    Data(int year = 1, int month = 1, int day = 1)
        :_year(year)
        , _month(month)
        , _day(day)
    {
    }
    int GetMonthDay(int year, int month)
    {
        int ret[13] = { 0,31,28,31,30,31,30,31,31,30,31,30,31 };
        if (month == 2 && ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0))
        {
            return 29;
        }
        return ret[month];
    }
    Data& operator+(int n)
    {
        _day += n;
        while (_day > GetMonthDay(_year, _month))
        {
            _day -= GetMonthDay(_year, _month);
            _month++;
            if (_month == 13)
            {
                _month = 1;
                _year++;
            }
        }
        return *this;
    }
    void print()
    {
        printf("%d-%02d-%02d\n", _year, _month, _day);
    }
private:
    int _year = 1;
    int _month = 1;
    int _day = 1;
};
istream& operator>>(istream& in, Data& A)
{
    cin >> A._year >> A._month >> A._day;
    return in;
}
int main() {
    int n, m;
    while (cin >> m >> n)
    {
        n--;
        Data A(m, 1, 1);
        A = A + n;
        A.print();
    }
}