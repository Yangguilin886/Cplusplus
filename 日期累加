#include <iostream>
#include <iterator>
using namespace std;
class Data
{
    friend ostream& operator<<(ostream& out,Data& A);
    friend istream& operator>>(istream& in,Data& A);
public:
    Data(int year=1,int month=1,int day=1)
    :_year(year)
    ,_month(month)
    ,_day(day)
    {}
    int GetmonthDay(int year,int month)
    {
        int ret[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
        if(month==2&&(year%4==0&&year%100!=0)||year%400==0)
        {
            return 29;
        }
        return ret[month];
    }
    Data& operator+(int x)
    {
        _day+=x;
        while(_day>GetmonthDay(_year,_month))
        {
            _day-=GetmonthDay(_year,_month);
            _month++;
            if(_month==13)
            {
                _month=1;
                _year++;
            }
        }
        return *this;
    }
    void print()
    {
        printf("%d-",_year);
        printf("%02d-",_month);
        printf("%02d",_day);
    }
private:
    int _year=2000;
    int _month=1;
    int _day=1;
};
istream& operator>>(istream& in,Data& A)
{
    in>>A._year>>A._month>>A._day;
    return in;
}
ostream& operator<<(ostream& out,Data& A)
{
    out<<A._year<<"-"<<A._month<<"-"<<A._day<<endl;
    return out;
}
int main()
{
    int n=0;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        Data A(1,1,1);
        cin>>A;
        int flag=0;
        cin>>flag;
        A=A+flag;
        A.print();
        cout<<endl;
    }
}