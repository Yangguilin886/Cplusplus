class RangeFreqQuery {
    unordered_map<int,vector<int>> hash;
public:
    
    RangeFreqQuery(vector<int>& arr) {
        for(int i=0;i<arr.size();i++)
        {
            hash[arr[i]].push_back(i);
        }
    }
    
    int query(int left, int right, int value) {
        if(!hash.count(value))
        {
            return 0;
        }
        int l=0,r=hash[value].size()-1;
        while(l<r)
        {
            int mid=l+(r-l)/2;
            if(hash[value][mid]<left)
            {
                l=mid+1;
            }
            else
            {
                r=mid;
            }
        }
        if(hash[value][l]>right)
        {
            return 0;
        }
        int flag=l;
        l=0,r=hash[value].size()-1;
        while(l<r)
        {
            int mid=l+(r-l+1)/2;
            if(hash[value][mid]<=right)
            {
                l=mid;
            }
            else
            {
                r=mid-1;
            }
        }
        if(hash[value][l]<left)
        {
            return 0;
        }
        return l-flag+1;
    }
};