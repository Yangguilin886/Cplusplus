/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* cur1=l1;
        ListNode* cur2=l2;
        int n=0;
        ListNode* tail1=l1;
        ListNode* tail2=l2;
        while(cur1)
        {
            n++;
            tail1=cur1;
            cur1=cur1->next;
        }
        int m=0;
        while(cur2)
        {
            m++;
            tail2=cur2;
            cur2=cur2->next;
        }
        cur1=l1,cur2=l2;
        if(n>m)
        {
            int flag=0;
            while(cur2)
            {
                int sum=cur1->val+cur2->val+flag;
                flag=sum/10;
                sum%=10;
                cur1->val=sum;
                cur1=cur1->next;
                cur2=cur2->next;
            }
            while(cur1)
            {
                int sum=cur1->val+flag;
                flag=sum/10;
                sum%=10;
                cur1->val=sum;
                cur1=cur1->next;
            }
            if(flag)
            {
                ListNode* ret=new ListNode(flag);
                tail1->next=ret;
            }
            return l1;
        }
        else
        {
            int flag=0;
            while(cur1)
            {
                int sum=cur1->val+cur2->val+flag;
                flag=sum/10;
                sum%=10;
                cur2->val=sum;
                cur1=cur1->next;
                cur2=cur2->next;
            }
            while(cur2)
            {
                int sum=cur2->val+flag;
                flag=sum/10;
                sum%=10;
                cur2->val=sum;
                cur2=cur2->next;
            }
            if(flag)
            {
                ListNode* ret=new ListNode(flag);
                tail2->next=ret;
            }
            return l2;
        }
    }
};