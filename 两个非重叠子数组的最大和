class Solution {
public:
    int get_Maxsum(vector<int>& nums, int F, int S)
    {
        int Maxsum=0,max1=0;
        int left=0;
        int sum1=0,sum2=0;
        for(int i=0;i<S;i++)
        {
            sum2+=nums[i];
        }
        for(int i=0;i<nums.size()-S;i++)
        {
            sum1+=nums[i];
            sum2+=nums[i+S]-nums[i];
            if(i-left+1>F)
            {
                sum1-=nums[left++];
            }
            if(i-left+1==F)
            {
                max1=max(max1,sum1);
                Maxsum=max(Maxsum,max1+sum2);
            }
        }
        return Maxsum;
    }
    int maxSumTwoNoOverlap(vector<int>& nums, int firstLen, int secondLen) {
        return max(get_Maxsum(nums,firstLen,secondLen),get_Maxsum(nums,secondLen,firstLen));
    }
};