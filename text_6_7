//#include <iostream>
//using namespace std;
//class Data
//{
//public:
//	Data(int year = 1, int month = 1, int day = 1)
//	{
//		_year = year;
//		_month = month;
//		_day = day;
//	}
//	void print()
//	{
//		cout<<_year<<"/" << _month << "/" << _day << endl;
//	}
//private:
//	int _year;
//	int _month;
//	int _day;
//};
//int main()
//{
//	Data p1(2025, 6, 7);
//	Data p2(2025, 6, 14);
//	p1.print();
//	p2.print();
//	return 0;
//}
#include <iostream>
#include <stdlib.h>
using namespace std;
class Stack
{
public:
	Stack(int n = 4)
	{
		_a = (int*)malloc(sizeof(int) * n);
		size = 0;
		capacity = n;
	}
	void Push(int x = 0)
	{
		if (size == capacity)
		{
			int newcapacity = capacity * 2;
			int* ret = (int*)realloc(_a, newcapacity*sizeof(int));
			if (ret == nullptr)
			{
				perror("malloc fail");
				return;
			}
			_a = ret;
			capacity = newcapacity;
		}
		_a[size] = x;
		size++;
	}
	void Pop()
	{
		size--;
	}
	int FondTop()
	{
		int n = size - 1;
		return _a[n];
	}
	void print(int x = 0)
	{
		cout << x << endl;
	}
	bool Ecity()
	{
		return size== 0;
	}
	int StackSize()
	{
		return size;
	}
	~Stack()
	{
		free(_a);
		_a = nullptr;
		size = capacity = 0;
	}
private:
	int* _a;
	int size;
	int capacity;
};
int main()
{
	Stack D1;
	D1.Push(1);
	D1.Push(2);
	D1.Push(3);
	D1.Push(4);
	D1.Push(5);
	while (!D1.Ecity())
	{
		int n = D1.FondTop();
		D1.Pop();
		D1.print(n);
	}
}